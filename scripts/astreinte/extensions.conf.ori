;!
;! Automatically generated configuration file
;! Filename: extensions.conf (/etc/asterisk/extensions.conf)
;! Generator: Manager
;! Creation Date: Wed Sep 16 16:08:50 2009
;!
[general]
;
; If static is set to no, or omitted, then the pbx_config will rewrite
; this file when extensions are modified.  Remember that all comments
; made in the file will be lost when that happens. 
;
; XXX Not yet implemented XXX
;
static = yes
; Language en francais
language = fr
;
; if static=yes and writeprotect=no, you can save dialplan by
; CLI command "dialplan save" too
;
writeprotect = no
;
; If autofallthrough is set, then if an extension runs out of
; things to do, it will terminate the call with BUSY, CONGESTION
; or HANGUP depending on Asterisk's best guess. This is the default.
;
; If autofallthrough is not set, then if an extension runs out of 
; things to do, Asterisk will wait for a new extension to be dialed 
; (this is the original behavior of Asterisk 1.0 and earlier).
;
;autofallthrough=no
;
; If clearglobalvars is set, global variables will be cleared 
; and reparsed on an extensions reload, or Asterisk reload.
;
; If clearglobalvars is not set, then global variables will persist
; through reloads, and even if deleted from the extensions.conf or
; one of its included files, will remain set to the previous value.
;
; NOTE: A complication sets in, if you put your global variables into
; the AEL file, instead of the extensions.conf file. With clearglobalvars
; set, a "reload" will often leave the globals vars cleared, because it
; is not unusual to have extensions.conf (which will have no globals)
; load after the extensions.ael file (where the global vars are stored).
; So, with "reload" in this particular situation, first the AEL file will
; clear and then set all the global vars, then, later, when the extensions.conf
; file is loaded, the global vars are all cleared, and then not set, because
; they are not stored in the extensions.conf file.
;
clearglobalvars = no
static = yes
writeprotect = no
clearglobalvars = yes
static = yes
writeprotect = no
clearglobalvars = yes
;
; If priorityjumping is set to 'yes', then applications that support
; 'jumping' to a different priority based on the result of their operations
; will do so (this is backwards compatible behavior with pre-1.2 releases
; of Asterisk). Individual applications can also be requested to do this
; by passing a 'j' option in their arguments.
;
;priorityjumping=yes
;
; User context is where entries from users.conf are registered.  The
; default value is 'default'
;
;userscontext=default
;
; You can include other config files, use the #include command
; (without the ';'). Note that this is different from the "include" command
; that includes contexts within other contexts. The #include command works
; in all asterisk configuration files.
;#include "filename.conf"
; The "Globals" category contains global variables that can be referenced
; in the dialplan with the GLOBAL dialplan function:
; ${GLOBAL(VARIABLE)}
; ${${GLOBAL(VARIABLE)}} or ${text${GLOBAL(VARIABLE)}} or any hybrid
; Unix/Linux environmental variables can be reached with the ENV dialplan
; function: ${ENV(VARIABLE)}
;
[globals]
CONSOLE = Console/dsp  ; Console interface for demo
;CONSOLE=Zap/1
;CONSOLE=Phone/phone0
IAXINFO = guest  ; IAXtel username/password
;IAXINFO=myuser:mypass
TRUNK = Zap/g1  ; Trunk interface
;
; Note the 'g2' in the TRUNK variable above. It specifies which group (defined
; in zapata.conf) to dial, i.e. group 2, and how to choose a channel to use in
; the specified group. The four possible options are:
;
; g: select the lowest-numbered non-busy Zap channel
;    (aka. ascending sequential hunt group).
; G: select the highest-numbered non-busy Zap channel
;    (aka. descending sequential hunt group).
; r: use a round-robin search, starting at the next highest channel than last
;    time (aka. ascending rotary hunt group).
; R: use a round-robin search, starting at the next lowest channel than last
;    time (aka. descending rotary hunt group).
;
TRUNKMSD = 1  ; MSD digits to strip (usually 1 or 0)
trunk_1 = Zap/g1
trunk_3_cid = unknown
FEATURES = 
DIALOPTIONS = 
RINGTIME = 20,20
FOLLOWMEOPTIONS = 
PAGING_HEADER = Intercom
PAGING_TIMEOUT = 60
timeinterval_ig-ouvert = 07:00-17:00|mon-fri|*|*
timeinterval_ig-fermer-fds = *|sat-sun|*|*
timeinterval_ig-fermer = 17:00-07:00|mon-fri|*|*
GLOBAL_OUTBOUNDCID = 4186812929
4189079524 = IAX2/4189079524
CID_trunk_1 = Infoglobe
CID_103 = 4186812929
CID_104 = 4186812929
CID_109 = 4186812929
CID_113 = 4186812929
CID_116 = 4186812929
CID_117 = 4186812929
CID_118 = 4186812929
CID_119 = 4186812929
CID_120 = 4186812929
CID_123 = 4186812929
CID_124 = 4186812929
CID_125 = 4186812929
CID_126 = 4186812929
CID_134 = 4186812929
CID_135 = 4186812929
CID_136 = 4186812929
CID_137 = 4186812929
CID_138 = 4186812929
CID_139 = 4186812929
CID_141 = 4186812929
CID_142 = 4186812929
CID_143 = 4186812929
CID_144 = 4186812929
CID_160 = 4186812929
FOLLOWME_117 = 0
FOLLOWME_124 = 0
CID_4189079524 = 4186812929
CID_145 = 4186812929
CID_5142254138 = 5142254138
5142254138 = IAX2/5142254138
GLOBAL_OUTBOUNDCIDNAME = Infoglobe
FEATURES = 
DIALOPTIONS = 
RINGTIME = 20
FOLLOWMEOPTIONS = 
PAGING_HEADER = Intercom
PAGING_TIMEOUT = 60
CID_149 = 4189302424
CID_150 = 5142254138
FOLLOWME_150 = 1
CID_151 = 4186812929
4189079583 = SIP/4189079583
CID_4189079583 = 4186812929
FEATURES = 
DIALOPTIONS = 
RINGTIME = 20
FOLLOWMEOPTIONS = 
PAGING_HEADER = Intercom
PAGING_TIMEOUT = 60
CID_152 = 4186812929
CID_153 = 5142254138
CID_146 = 5142254138
CID_105 = 4186812929
CID_130 = 4186812929
CID_166 = 4186812929
FOLLOWME_118 = 1
;TRUNK=IAX2/user:pass@provider
;
; Any category other than "General" and "Globals" represent 
; extension contexts, which are collections of extensions.  
;
; Extension names may be numbers, letters, or combinations
; thereof. If an extension name is prefixed by a '_'
; character, it is interpreted as a pattern rather than a
; literal.  In patterns, some characters have special meanings:
;
;   X - any digit from 0-9
;   Z - any digit from 1-9
;   N - any digit from 2-9
;   [1235-9] - any digit in the brackets (in this example, 1,2,3,5,6,7,8,9)
;   . - wildcard, matches anything remaining (e.g. _9011. matches 
;	anything starting with 9011 excluding 9011 itself)
;   ! - wildcard, causes the matching process to complete as soon as
;       it can unambiguously determine that no other matches are possible
;
; For example the extension _NXXXXXX would match normal 7 digit dialings, 
; while _1NXXNXXXXXX would represent an area code plus phone number
; preceded by a one.
;
; Each step of an extension is ordered by priority, which must
; always start with 1 to be considered a valid extension.  The priority
; "next" or "n" means the previous priority plus one, regardless of whether
; the previous priority was associated with the current extension or not.
; The priority "same" or "s" means the same as the previously specified
; priority, again regardless of whether the previous entry was for the
; same extension.  Priorities may be immediately followed by a plus sign
; and another integer to add that amount (most useful with 's' or 'n').  
; Priorities may then also have an alias, or label, in 
; parenthesis after their name which can be used in goto situations
;
; Contexts contain several lines, one for each step of each
; extension, which can take one of two forms as listed below,
; with the first form being preferred. 
;
;[context]
;exten => someexten,{priority|label{+|-}offset}[(alias)],application(arg1,arg2,...)
;exten => someexten,{priority|label{+|-}offset}[(alias)],application,arg1|arg2...
;
; Included Contexts
;
; One may include another context in the current one as well, optionally with a
; date and time.  Included contexts are included in the order
; they are listed.
; The reason a context would include other contexts is for their 
; extensions.
; The algorithm to find an extension is recursive, and works in this
; fashion: 
;	 first, given a stack on which to store context references, 
;           push the context to find the extension onto the stack...
;    a) Try to find a matching extension in the context at the top of 
;       the stack, and, if found, begin executing the priorities
;       there in sequence.
;    b) If not found, Search the switches, if any declared, in
;       sequence.
;    c) If still not found, for each include, push that context onto 
;       the top of the context stack, and recurse to a).
;    d) If still not found, pop the entry from the top of the stack; 
;       if the stack is empty, the search has failed. If it's not, 
;       continue with the next context in c).
; This is a depth-first traversal, and stops with the first context 
; that provides a matching extension. As usual, if more than one
; pattern in a context will match, the 'best' match will win.
; Please note that that extensions found in an included context are
; treated as if they were in the context from which the search began.
; The PBX's notion of the "current context" is not changed.
; Please note that in a context, it does not matter where an include
; directive occurs. Whether at the top, or near the bottom, the effect 
; will be the same. The only thing that matters is that if there is 
; more than one include directive, they will be searched for extensions 
; in order, first to last.
; Also please note that pattern matches (like _9XX) are not treated
; any differently than exact matches (like 987). Also note that the
; order of extensions in a context have no affect on the outcome.
;
; Timing list for includes is 
;
;   <time range>|<days of week>|<days of month>|<months>
;
; Note that ranges may be specified to wrap around the ends.  Also, minutes are
; fine-grained only down to the closest even minute.
;
;include => daytime|9:00-17:00|mon-fri|*|*
;include => weekend|*|sat-sun|*|*
;include => weeknights|17:02-8:58|mon-fri|*|*
;
; ignorepat can be used to instruct drivers to not cancel dialtone upon
; receipt of a particular pattern.  The most commonly used example is
; of course '9' like this:
;
;ignorepat => 9
;
; so that dialtone remains even after dialing a 9.
;
;
; Sample entries for extensions.conf
;
;
[dundi-e164-canonical]
;
; List canonical entries here
;
;exten => 12564286000,1,Macro(stdexten,6000,IAX2/foo)
;exten => _125642860XX,1,Dial(IAX2/otherbox/${EXTEN:7})
[dundi-e164-customers]
;
; If you are an ITSP or Reseller, list your customers here.
;
;exten => _12564286000,1,Dial(SIP/customer1)
;exten => _12564286001,1,Dial(IAX2/customer2)
[dundi-e164-via-pstn]
;
; If you are freely delivering calls to the PSTN, list them here
;
;exten => _1256428XXXX,1,Dial(Zap/g2/${EXTEN:7}) ; Expose all of 256-428 
;exten => _1256325XXXX,1,Dial(Zap/g2/${EXTEN:7}) ; Ditto for 256-325
[dundi-e164-local]
;
; Context to put your dundi IAX2 or SIP user in for
; full access
;
;clean 07/05/08
;include => dundi-e164-canonical
;include => dundi-e164-customers
;include => dundi-e164-via-pstn
;;
[dundi-e164-switch]
;
; Just a wrapper for the switch
;
switch => DUNDi/e164

[dundi-e164-lookup]
;
; Locally to lookup, try looking for a local E.164 solution
; then try DUNDi if we don't have one.
;
;clean 07/05/08
;include => dundi-e164-local
;include => dundi-e164-switch
;;
; DUNDi can also be implemented as a Macro instead of using 
; the Local channel driver. 
;
[macro-dundi-e164]
;
; ARG1 is the extension to Dial
;
; Extension "s" is not a wildcard extension that matches "anything".
; In macros, it is the start extension. In most other cases, 
; you have to goto "s" to execute that extension.
;
; For wildcard matches, see above - all pattern matches start with
; an underscore.
exten => s,1,Goto(${ARG1},1)
include => dundi-e164-lookup
;
; Here are the entries you need to participate in the IAXTEL
; call routing system.  Most IAXTEL numbers begin with 1-700, but
; there are exceptions.  For more information, and to sign
; up, please go to www.gnophone.com or www.iaxtel.com
;
[iaxtel700]
exten => _91700XXXXXXX,1,Dial(IAX2/${GLOBAL(IAXINFO)}@iaxtel.com/${EXTEN:1}@iaxtel)
;
; The SWITCH statement permits a server to share the dialplan with
; another server. Use with care: Reciprocal switch statements are not
; allowed (e.g. both A -> B and B -> A), and the switched server needs
; to be on-line or else dialing can be severly delayed.
;
[iaxprovider]
;switch => IAX2/user:[key]@myserver/mycontext
[trunkint]
;
; International long distance through trunk
;
exten => _9011.,1,Macro(dundi-e164,${EXTEN:4})
exten => _9011.,n,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})

[trunkld]
;
; Long distance context accessed through trunk
;
exten => _91NXXNXXXXXX,1,Macro(dundi-e164,${EXTEN:1})
exten => _91NXXNXXXXXX,n,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})

[trunklocal]
;
; Local seven-digit dialing accessed through trunk interface
;
exten => _9NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})

[trunktollfree]
;
; Long distance context accessed through trunk interface
;
exten => _91800NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
exten => _91888NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
exten => _91877NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
exten => _91866NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})

[international]
;
; Master context for international long distance
;
ignorepat => 9
include => longdistance
include => trunkint

[longdistance]
;
; Master context for long distance
;
ignorepat => 9
include => local
include => trunkld

[local]
;
; Master context for local, toll-free, and iaxtel calls only
;
ignorepat => 9
include => default
include => trunklocal
include => iaxtel700
include => trunktollfree
include => iaxprovider
;Include parkedcalls (or the context you define in features conf)
;to enable call parking.
include => parkedcalls

[macro-stdPrivacyexten];
;
; Standard extension macro:
;   ${ARG1} - Extension  (we could have used ${MACRO_EXTEN} here as well
;   ${ARG2} - Device(s) to ring
;   ${ARG3} - Optional DONTCALL context name to jump to (assumes the s,1 extension-priority)
;   ${ARG4} - Optional TORTURE context name to jump to (assumes the s,1 extension-priority)`
;
exten => s,1,Dial(${ARG2},20|p)  ; Ring the interface, 20 seconds maximum, call screening 
; option (or use P for databased call screening)
exten => s,2,Goto(s-${DIALSTATUS},1)  ; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)
exten => s-NOANSWER,1,Voicemail(${ARG1},u)  ; If unavailable, send to voicemail w/ unavail announce
exten => s-NOANSWER,2,Goto(default,s,1)  ; If they press #, return to start
exten => s-BUSY,1,Voicemail(${ARG1},b)  ; If busy, send to voicemail w/ busy announce
exten => s-BUSY,2,Goto(default,s,1)  ; If they press #, return to start
exten => s-DONTCALL,1,Goto(${ARG3},s,1)  ; Callee chose to send this call to a polite "Don't call again" script.
exten => s-TORTURE,1,Goto(${ARG4},s,1)  ; Callee chose to send this call to a telemarketer torture script.
exten => _s-.,1,Goto(s-NOANSWER,1)  ; Treat anything else as no answer
exten => a,1,VoicemailMain(${ARG1})  ; If they press *, send the user into VoicemailMain

[macro-page];
;
; Paging macro:
;
;       Check to see if SIP device is in use and DO NOT PAGE if they are
;
;   ${ARG1} - Device to page
exten => s,1,ChanIsAvail(${ARG1}|js)  ; j is for Jump and s is for ANY call
exten => s,n,GoToIf([${AVAILSTATUS} = "1"]?autoanswer:fail)
exten => s,n(autoanswer),Set(_ALERT_INFO="RA")  ; This is for the PolyComs
exten => s,n,SIPAddHeader(Call-Info: Answer-After=0)  ; This is for the Grandstream, Snoms, and Others
exten => s,n,NoOp()  ; Add others here and Post on the Wiki!!!!
exten => s,n,Dial(${ARG1}||)
exten => s,n(fail),Hangup
; A timeout and "invalid extension rule"
;
exten => t,1,Goto(#,1)  ; If they take too long, give up
exten => i,1,Playback(invalid)  ; "That's not valid, try again"
; Here's what a phone entry would look like (IXJ for example)
;
;exten => 1265,1,Dial(Phone/phone0,15)
;exten => 1265,n,Goto(s,5)
;
;	The page context calls up the page macro that sets variables needed for auto-answer
;	It is in is own context to make calling it from the Page() application as simple as 
;	Local/{peername}@page
;
[page]
exten => _X.,1,Macro(page,SIP/${EXTEN})
;[mainmenu]
;
; Example "main menu" context with submenu
;
;exten => s,1,Answer
;exten => s,n,Background(thanks)		; "Thanks for calling press 1 for sales, 2 for support, ..."
;exten => s,n,WaitExten
;exten => 1,1,Goto(submenu,s,1)
;exten => 2,1,Hangup
;include => default
;
;[submenu]
;exten => s,1,Ringing					; Make them comfortable with 2 seconds of ringback
;exten => s,n,Wait,2
;exten => s,n,Background(submenuopts)	; "Thanks for calling the sales department.  Press 1 for steve, 2 for..."
;exten => s,n,WaitExten
;exten => 1,1,Goto(default,steve,1)
;exten => 2,1,Goto(default,mark,2)
[default]
;*extension pour aller direct dans la boite
exten => _*1XX,1,Voicemail(${EXTEN:1})
exten => _*1XX,2,Hangup()
exten => 2001,1,AgentCallbackLogin(||${CALLERIDNUM}@default)
exten => 117,1,Dial(SIP/160,16,Ttr)
exten => 117,2,Dial(SIP/117,18,Ttr)
exten => 117,3,Voicemail(u117)
exten => 160,1,Dial(SIP/160,16,Ttr)
exten => 160,2,Dial(SIP/117,18,Ttr)
exten => 160,3,Voicemail(u117)
exten = o,1,Goto(default,127,1)
include = ringgroups
exten = 999,1,VoiceMailMain(${CALLERID(num)}@default)

[DID_trunk_1_default]
include = default
exten = s,1,Goto(voicemenu-custom-1|s|1)

[macro-trunkdial]
exten = s,1,set(CALLERID(all)=${IF($[${LEN(${CALLERID(num)})} > 6]?${CALLERID(all)}:${ARG2})})
exten = s,n,Dial(${ARG1})
exten = s,n,Goto(s-${DIALSTATUS},1)
exten = s-NOANSWER,1,Hangup
exten = s-BUSY,1,Hangup
exten = _s-.,1,NoOp

[conferences]
exten = 850,1,MeetMe(${EXTEN}|MI)
exten = 851,1,MeetMe(${EXTEN}|MI)
exten = 852,1,MeetMe(${EXTEN}|MsI)
exten = 8529,1,MeetMe(852|MsIaA)

[ringgroups]
exten = 350,1,Goto(ringroups-custom-1|s|1)
exten = 351,1,Goto(ringroups-custom-2|s|1)
exten = 199,1,Goto(ringroups-custom-4|s|1)
exten = 127,1,Goto(ringroups-custom-3|s|1)

[queues]
exten = 665,1,agentlogin()
exten = 666,1,agentcallbacklogin()
exten = 6500,1,Queue(${EXTEN})

[voicemenus]

[voicemailgroups]

[directory]

[page_an_extension]

[pagegroups]

[DID_trunk_1]
include = DID_trunk_1_timeinterval_ig-fermer|${timeinterval_ig-fermer}
include = DID_trunk_1_timeinterval_ig-fermer-fds|${timeinterval_ig-fermer-fds}
include = DID_trunk_1_default

[CallingRule_outgoing]
exten = _418XXXXXXX!,1,Macro(trunkdial-failover-0.3,${4189079524}/${EXTEN:0},${trunk_1}/${EXTEN:0},4189079524,trunk_1)

[DLPN_IG_Interne]
include = default
include = parkedcalls
include = conferences
include = ringgroups
include = voicemenus
include = queues
include = voicemailgroups
include = directory
include = pagegroups

[DID_4189079524]
include = DID_4189079524_default

[DID_4189079524_default]

[DID_trunk_1_timeinterval_ig-fermer-fds]
exten = s,1,ExecIf($[ "${CALLERID(num)}"="" ],SetCallerPres,unavailable)
exten = s,2,ExecIf($[ "${CALLERID(num)}"="" ],Set,CALLERID(all)=unknown <0000000>)
exten = s,3,Goto(voicemenu-custom-3|s|1)

[DID_trunk_1_timeinterval_ig-fermer]
exten = s,1,ExecIf($[ "${CALLERID(num)}"="" ],SetCallerPres,unavailable)
exten = s,2,ExecIf($[ "${CALLERID(num)}"="" ],Set,CALLERID(all)=unknown <0000000>)
exten = s,3,Goto(voicemenu-custom-3|s|1)

[CallingRule_Longdistance]
exten = _1XXXXXXXXXX!,1,Macro(trunkdial-failover-0.3,${4189079524}/${EXTEN:0},${trunk_1}/${EXTEN:0},4189079524,trunk_1)

[CallingRule_International]
exten = _9011XXXXX.,1,Macro(trunkdial-failover-0.3,${4189079524}/${EXTEN:1},${trunk_1}/${EXTEN:1},4189079524,trunk_1)

[CallingRule_Local_7_digits]
exten = _9XXXXXXXXXX!,1,Macro(trunkdial-failover-0.3,${4189079524}/${EXTEN:1},${trunk_1}/${EXTEN:1},4189079524,trunk_1)

[CallingRule_Emergency]
exten = _911!,1,Macro(trunkdial-failover-0.3,${trunk_1}/${EXTEN:0},${4189079524}/1${EXTEN:0},trunk_1,4189079524)

[CallingRule_outgoing_mtl]
exten = _514XXXXXXX!,1,Macro(trunkdial-failover-0.3,${5142254138}/${EXTEN:0},${trunk_1}/${EXTEN:0},5142254138,trunk_1)

[voicemenu-custom-5]
include = default
exten = s,1,NoOp(directory)
exten = s,2,Answer
exten = s,3,Directory(default|voicemenu-custom-5||)

[ringroups-custom-1]
exten = s,1,NoOp(LQT)
exten = s,n,Dial(SIP/123,15,i)
exten = s,n,Voicemail(123,u)
;[softphone]
;exten => 117,1,Dial(SIP/160,16,Ttr)
;exten => 117,2,Dial(SIP/117,18,Ttr)
;exten => 117,3,Voicemail(u117)
;exten => 160,1,Dial(SIP/160,16,Ttr)
;exten => 160,2,Dial(SIP/117,18,Ttr)
;exten => 160,3,Voicemail(u117)
[ringroups-custom-2]
exten = s,1,NoOp(sales)
exten = s,n,Dial(SIP/139,10,i)
exten = s,n,Dial(SIP/142,10,i)
exten = s,n,Dial(SIP/124,10,i)
exten = s,n,Goto(voicemenu-custom-1|s|1)

[DID_5142254138]
include = DID_5142254138_default

[DID_5142254138_default]
exten = 5142254138,1,Goto(voicemenu-custom-1|s|1)

[CallingRule_oversea]
exten = 9011XXXXXXXXXXX,1,Macro(trunkdial-failover-0.3,${4189079524}/${EXTEN:1},,4189079524,)

[voicemenu-custom-2]
include = default
exten = s,1,NoOp(intro-en)
exten = s,2,Answer
exten = s,3,Background(record/em_intro_en)
exten = 0,1,Goto(ringroups-custom-3|s|1)
exten = 127,1,Goto(ringroups-custom-3|s|1)
exten = 1,1,Goto(ringroups-custom-1|s|1)
exten = 2,1,Goto(ringroups-custom-2|s|1|s|1)
exten = 3,1,Goto(voicemenu-custom-7|s|1)
exten = i,1,Goto(voicemenu-custom-1|s|2)

[voicemenu-custom-6]
exten = s,1,NoOp(addresse_fr)
exten = s,2,Answer()
exten = s,3,Playback(record/emma_address_fr)
exten = 0,1,Goto(ringroups-custom-3|s|1)
exten = 1,1,Goto(queues|350|1)
exten = 2,1,Goto(ringroups-custom-2|s|1|s|1)
exten = 9,1,Goto(voicemenu-custom-4|s|2)
exten = t,1,Hangup
exten = i,1,Goto(default|o|1)

[voicemenu-custom-7]
exten = s,1,NoOp(addresse_en)
exten = s,2,Answer()

[voicemenu-custom-4]
include = default
exten = s,1,NoOp(closed_en)
exten = s,2,Answer
exten = s,3,Wait(1)
exten = s,4,Background(record/em_en_closed)
exten = 0,1,Goto(ringroups-custom-3|s|1)
exten = 1,1,Goto(queues|350|1)
exten = 2,1,Goto(ringroups-custom-2|s|1|s|1)

[general]

[globals]

[default]

[conferences]

[ringgroups]

[queues]

[voicemenus]

[voicemailgroups]

[directory]

[page_an_extension]

[pagegroups]

[macro-stdexten-followme]
exten = s,1,Answer
exten = s,2,Dial(${ARG2},${RINGTIME},${DIALOPTIONS})
exten = s,3,Set(__FMCIDNUM=${CALLERID(num)})
exten = s,4,Set(__FMCIDNAME=${CALLERID(name)})
exten = s,5,Followme(${ARG1},${FOLLOWMEOPTIONS})
exten = s,6,Voicemail(${ARG1},u)
exten = s-NOANSWER,1,Voicemail(${ARG1},u)
exten = s-BUSY,1,Voicemail(${ARG1},b)
exten = s-BUSY,2,Goto(default,s,1)
exten = _s-.,1,Goto(s-NOANSWER,1)
exten = a,1,VoicemailMain(${ARG1})

[asterisk_guitools]
exten = executecommand,1,System(${command})
exten = executecommand,n,Hangup()
exten = record_vmenu,1,Answer
exten = record_vmenu,n,Playback(vm-intro)
exten = record_vmenu,n,Record(${var1})
exten = record_vmenu,n,Playback(vm-saved)
exten = record_vmenu,n,Playback(vm-goodbye)
exten = record_vmenu,n,Hangup
exten = play_file,1,Answer
exten = play_file,n,Playback(${var1})
exten = play_file,n,Hangup

[ringroups-custom-4]
exten = s,1,NoOp(Astreinte)
exten = s,n,Dial(IAX2/4189079524/4182614587,25,i)

[voicemenu-custom-8]
exten = s,1,NoOp(disa)
exten = s,2,Answer()
exten = s,3,Set(TIMEOUT(digit)=3)
exten = s,4,Set(TIMEOUT(response)=5)
exten = s,5,Authenticate(9689)
exten = s,6,DISA(no-password|DLPN_DialPlan1)

[voicemenu-custom-9]
exten = s,1,NoOp(tmp)
exten => s,1,Answer
exten => s,n,PlayTones(1004/1000)
exten => s,n,Wait(300)

[ringroups-custom-3]
exten = s,1,NoOp(operateur)
exten = s,n,Dial(SIP/149,11,i)
exten = s,n,Dial(SIP/144,11,i)
exten = s,n,Dial(SIP/137,11,i)
exten = s,n,Voicemail(149,u)

[CallingRule_pstn]
exten = _6XXXXXXXXXX!,1,Macro(trunkdial-failover-0.3,${trunk_1}/${EXTEN:1},,trunk_1,4189079524)

[DLPN_DialPlan1]
include = CallingRule_outgoing
include = CallingRule_Longdistance
include = CallingRule_International
include = CallingRule_Local_7_digits
include = CallingRule_Emergency
include = CallingRule_outgoing_mtl
include = CallingRule_oversea
include = CallingRule_pstn
include = default
include = parkedcalls
include = conferences
include = ringgroups
include = voicemenus
include = queues
include = voicemailgroups
include = directory
include = pagegroups

[DID_4189079583]
include = DID_4189079583_default

[DID_4189079583_default]

[general]

[globals]

[default]

[macro-stdexten]
exten = s,1,Set(__DYNAMIC_FEATURES=${FEATURES})
exten = s,2,GotoIf($["${FOLLOWME_${ARG1}}" = "1"]?5:3)
exten = s,3,Dial(${ARG2},${RINGTIME},${DIALOPTIONS})
exten = s,4,Goto(s-${DIALSTATUS},1)
exten = s,5,Macro(stdexten-followme,${ARG1},${ARG2})
exten = s-NOANSWER,1,Voicemail(${ARG1},u)
exten = s-NOANSWER,2,Goto(default,s,1)
exten = s-BUSY,1,Voicemail(${ARG1},b)
exten = s-BUSY,2,Goto(default,s,1)
exten = _s-.,1,Goto(s-NOANSWER,1)
exten = a,1,VoicemailMain(${ARG1})

[macro-stdexten-followme]

[macro-pagingintercom]
exten = s,1,SIPAddHeader(Alert-Info: ${PAGING_HEADER})
exten = s,2,Page(${ARG1},${ARG2})
exten = s,3,Hangup

[conferences]

[ringgroups]

[queues]

[voicemenus]

[voicemailgroups]

[directory]

[page_an_extension]

[pagegroups]

[asterisk_guitools]

[macro-trunkdial-failover-0.3]
exten = s,1,GotoIf($[${LEN(${FMCIDNUM})} > 6]?1-fmsetcid,1)
exten = s,2,GotoIf($[${LEN(${GLOBAL_OUTBOUNDCIDNAME})} > 1]?1-setgbobname,1)
exten = s,3,Set(CALLERID(num)=${IF($[${LEN(${CID_${CALLERID(num)}})} > 2]?${CID_${CALLERID(num)}}:)})
exten = s,n,GotoIf($[${LEN(${CALLERID(num)})} > 6]?1-dial,1)
exten = s,n,Set(CALLERID(all)=${IF($[${LEN(${CID_${ARG3}})} > 6]?${CID_${ARG3}}:${GLOBAL_OUTBOUNDCID})})
exten = s,n,Goto(1-dial,1)
exten = 1-setgbobname,1,Set(CALLERID(name)=${GLOBAL_OUTBOUNDCIDNAME})
exten = 1-setgbobname,n,Goto(s,3)
exten = 1-fmsetcid,1,Set(CALLERID(num)=${FMCIDNUM})
exten = 1-fmsetcid,n,Set(CALLERID(name)=${FMCIDNAME})
exten = 1-fmsetcid,n,Goto(1-dial,1)
exten = 1-dial,1,Dial(${ARG1})
exten = 1-dial,n,Gotoif(${LEN(${ARG2})} > 0 ?1-${DIALSTATUS},1:1-out,1)
exten = 1-CHANUNAVAIL,1,Dial(${ARG2})
exten = 1-CHANUNAVAIL,n,Hangup()
exten = 1-CONGESTION,1,Dial(${ARG2})
exten = 1-CONGESTION,n,Hangup()
exten = 1-out,1,Hangup()

[macro-stdexten]

[macro-stdexten-followme]

[macro-pagingintercom]

[asterisk_guitools]

[macro-trunkdial-failover-0.3]

[voicemenu-custom-3]
include = default
exten = s,1,NoOp(closed_fr)
exten = s,2,Answer
exten = s,3,Wait(1)
exten = s,4,Background(record/em_fr_closed)
exten = 0,1,Goto(ringroups-custom-3|s|1)
exten = 1,1,Goto(queues|6500|1)
exten = 2,1,Goto(ringroups-custom-2|s|1|s|1)
exten = 3,1,Goto(voicemenu-custom-6|s|1)
exten = 9,1,Goto(voicemenu-custom-4|s|2)
exten = t,1,Hangup
exten = i,1,Goto(default|o|1)

[voicemenu-custom-1]
include = default
exten = s,1,NoOp(intro)
exten = s,2,Answer
exten = s,3,Wait(1)
exten = s,4,Background(record/em_intro)
exten = 0,1,Goto(ringroups-custom-3|s|1)
exten = 1,1,Goto(ringroups-custom-1|s|1)
exten = 2,1,Goto(ringroups-custom-2|s|1|s|1)
exten = 3,1,Goto(voicemenu-custom-6|s|1)
exten = 7,1,Goto(conferences|851|1)
exten = 9,1,Goto(voicemenu-custom-2|s|1)
exten = #,1,Goto(voicemenu-custom-5|s|1)
exten = t,1,Hangup
exten = i,1,Goto(default|o|1)

[macro-stdexten]

[macro-pagingintercom]
